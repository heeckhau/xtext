/*
* generated by Xtext
*/
package org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipse.xtext.ui.tests.editor.contentassist.services.Bug360834TestLanguageGrammarAccess;

public class Bug360834TestLanguageParser extends AbstractContentAssistParser {
	
	@Inject
	private Bug360834TestLanguageGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr.internal.InternalBug360834TestLanguageParser createParser() {
		org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr.internal.InternalBug360834TestLanguageParser result = new org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr.internal.InternalBug360834TestLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelAccess().getAlternatives(), "rule__Model__Alternatives");
					put(grammarAccess.getAlternativeClassModifiersAccess().getAlternatives_1(), "rule__AlternativeClassModifiers__Alternatives_1");
					put(grammarAccess.getVisibilityAccess().getAlternatives(), "rule__Visibility__Alternatives");
					put(grammarAccess.getModelAccess().getGroup_0(), "rule__Model__Group_0__0");
					put(grammarAccess.getModelAccess().getGroup_1(), "rule__Model__Group_1__0");
					put(grammarAccess.getAlternativeAccess().getGroup(), "rule__Alternative__Group__0");
					put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
					put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
					put(grammarAccess.getRecursiveClassDeclarationAccess().getGroup(), "rule__RecursiveClassDeclaration__Group__0");
					put(grammarAccess.getAlternativeClassModifiersAccess().getGroup(), "rule__AlternativeClassModifiers__Group__0");
					put(grammarAccess.getUnorderedAccess().getGroup(), "rule__Unordered__Group__0");
					put(grammarAccess.getSimpleClassDeclarationAccess().getGroup(), "rule__SimpleClassDeclaration__Group__0");
					put(grammarAccess.getClassMemberAccess().getGroup(), "rule__ClassMember__Group__0");
					put(grammarAccess.getUnorderedModifiersAccess().getGroup(), "rule__UnorderedModifiers__Group__0");
					put(grammarAccess.getModelAccess().getElementAssignment_0_1(), "rule__Model__ElementAssignment_0_1");
					put(grammarAccess.getModelAccess().getElementAssignment_1_1(), "rule__Model__ElementAssignment_1_1");
					put(grammarAccess.getAlternativeAccess().getNameAssignment_1(), "rule__Alternative__NameAssignment_1");
					put(grammarAccess.getAlternativeAccess().getRootDeclarationAssignment_3(), "rule__Alternative__RootDeclarationAssignment_3");
					put(grammarAccess.getRecursiveClassDeclarationAccess().getModifiersAssignment_0(), "rule__RecursiveClassDeclaration__ModifiersAssignment_0");
					put(grammarAccess.getRecursiveClassDeclarationAccess().getNameAssignment_2(), "rule__RecursiveClassDeclaration__NameAssignment_2");
					put(grammarAccess.getRecursiveClassDeclarationAccess().getMembersAssignment_4(), "rule__RecursiveClassDeclaration__MembersAssignment_4");
					put(grammarAccess.getAlternativeClassModifiersAccess().getFinalAssignment_1_0(), "rule__AlternativeClassModifiers__FinalAssignment_1_0");
					put(grammarAccess.getAlternativeClassModifiersAccess().getAbstractAssignment_1_1(), "rule__AlternativeClassModifiers__AbstractAssignment_1_1");
					put(grammarAccess.getAlternativeClassModifiersAccess().getExternAssignment_1_2(), "rule__AlternativeClassModifiers__ExternAssignment_1_2");
					put(grammarAccess.getAlternativeClassModifiersAccess().getVisibilityAssignment_1_3(), "rule__AlternativeClassModifiers__VisibilityAssignment_1_3");
					put(grammarAccess.getUnorderedAccess().getNameAssignment_1(), "rule__Unordered__NameAssignment_1");
					put(grammarAccess.getUnorderedAccess().getRootDeclarationAssignment_3(), "rule__Unordered__RootDeclarationAssignment_3");
					put(grammarAccess.getSimpleClassDeclarationAccess().getModifiersAssignment_0(), "rule__SimpleClassDeclaration__ModifiersAssignment_0");
					put(grammarAccess.getSimpleClassDeclarationAccess().getNameAssignment_2(), "rule__SimpleClassDeclaration__NameAssignment_2");
					put(grammarAccess.getSimpleClassDeclarationAccess().getMembersAssignment_4(), "rule__SimpleClassDeclaration__MembersAssignment_4");
					put(grammarAccess.getClassMemberAccess().getModifiersAssignment_0(), "rule__ClassMember__ModifiersAssignment_0");
					put(grammarAccess.getClassMemberAccess().getNameAssignment_2(), "rule__ClassMember__NameAssignment_2");
					put(grammarAccess.getUnorderedModifiersAccess().getFinalAssignment_1_0(), "rule__UnorderedModifiers__FinalAssignment_1_0");
					put(grammarAccess.getUnorderedModifiersAccess().getAbstractAssignment_1_1(), "rule__UnorderedModifiers__AbstractAssignment_1_1");
					put(grammarAccess.getUnorderedModifiersAccess().getExternAssignment_1_2(), "rule__UnorderedModifiers__ExternAssignment_1_2");
					put(grammarAccess.getUnorderedModifiersAccess().getVisibilityAssignment_1_3(), "rule__UnorderedModifiers__VisibilityAssignment_1_3");
					put(grammarAccess.getUnorderedModifiersAccess().getUnorderedGroup_1(), "rule__UnorderedModifiers__UnorderedGroup_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr.internal.InternalBug360834TestLanguageParser typedParser = (org.eclipse.xtext.ui.tests.editor.contentassist.ui.contentassist.antlr.internal.InternalBug360834TestLanguageParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public Bug360834TestLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(Bug360834TestLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
